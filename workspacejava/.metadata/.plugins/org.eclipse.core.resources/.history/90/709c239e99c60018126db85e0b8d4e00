import java.util.*;

public class TriangleOfSquares {

	public static void main(String[] args) {
		/** Write a program using a Scanner that asks the user for a number n between 1 and 9 (inclusive).  
		 * The program prints a triangle with n rows.  The first row contains only the square of 1, and it is right-justified.  
		 * The second row contains the square of 2 followed by the square of 1, and is right justified.  
		 * Subsequent rows include the squares of 3, 2, and 1, and then 4, 3, 2 and 1, and so forth until n rows are printed.
		 */

		int[] squaresArray = {1,4,9,16,25,36,49,64,81};
		
		int userEntry = 5; //Ex: 5
		int[] subSquaresArray = new int[userEntry]; //Ex: 5
		int[] reverseSubSquaresArray = new int[userEntry];
		
		// Fill substring 
			
		// Run for loop to obtain index 0 thru 1 before index[userEntry]; Ex: (less than 5) --> [0] thru [4] 
		for (int j = 0; j < (userEntry); j++) {
			subSquaresArray[j] = squaresArray[j];
			//System.out.println(subSquaresArray[j]);
		}

		// Fill reverse substring
		//System.out.println("Reverse Loop");
		int maxIndex = userEntry - 1; //Ex: 5 - 1 = 4
		for (int m = 0; m < (userEntry); m++) { //Ex: [0] thru [4]
			reverseSubSquaresArray[m] = subSquaresArray[maxIndex];
			maxIndex--;
		}
		
		//System.out.println("Print Reverse");
		String keepIndexes = "";
		String blankSpace = " ";
		for (int i = 0; i < reverseSubSquaresArray.length; i++) {
			System.out.println(reverseSubSquaresArray[i]);
			//keepIndexes = reverseSubSquaresArray[i];
		}
		
		// Print Triangle
		int rowBlankControl = userEntry - 1;
		// Number of rows equal user Entry Ex: 5
		// Run for loop to print number of rows
		for (int rows = 1; rows <= userEntry; rows++) {
			System.out.println("Row: " + rows);
			
			// Run loop for each row
			// Print the number of blank spaces Ex: Row 1, 4 blank Spaces
			for (int rowBlanks = rowBlankControl; rowBlanks > 0; rowBlanks--) {
				System.out.print("Blank Space: " + blankSpace);
				
			}
			rowBlankControl--;
			
			System.out.println("");

		}
		
		// Determine the number of indexes in a row
		int testEntry = 5;
		int testBlanks = testEntry - 2;
		int numberOfIndexes = testEntry - testBlanks;
		
		System.out.println("entry: " + testEntry + " Blanks: " + testBlanks + " Num of Indexes: " + numberOfIndexes);
		for (int z = 1; z < numberOfIndexes; z++) {
			System.out.print(reverseSubSquaresArray[testBlanks]);
			testBlanks--;
		}
		
		
		
		
		
		/**
		// Print indexes from last to first Ex: [4] to [0]
		for (int rowIndex = (userEntry - 1); rowIndex >= 0; rowIndex--) {
			System.out.println(reverseSubSquaresArray[rowIndex]);
		}*/
		//System.out.println("Keep Indexes: " + keepIndexes);
			
		//System.out.printf("%8s", keepIndexes);
		//System.out.print(keepIndexes.length());
		
		
	}

}
